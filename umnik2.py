# Подключение всех необходимых библиотек
# Нам нужно: speech_recognition, os, sys, webbrowser
# Для первой бибилотеки прописываем также псевдоним
import speech_recognition as sr # Библиотека для выполнения распознавания речи, с поддержкой нескольких движков и API, онлайн и офлайн.
import os
import sys
import webbrowser
import datetime
import \
    pyttsx3  # это библиотека преобразования текста в речь на Python. В отличие от альтернативных библиотек, он работает в автономном режиме

# Функция, позволяющая проговаривать слова
# Принимает параметр "Слова" и прогроваривает их
def talk(words):
    engine = pyttsx3.init()
    engine.say(words)
    engine.runAndWait()

""" 
	Функция command() служит для отслеживания микрофона.
	Слушаем что скажет пользователь в микрафон. Получение звук будет  конвертироваться в строку и далее
	будет происходить проверка.
"""
def command():
	# Создаем объект на основе библиотеки
	# speech_recognition и вызываем метод для определения данных
	r = sr.Recognizer()

	# Начинаем прослушивать микрофон и записываем данные в source
	with sr.Microphone() as source:
		print("Говорите") # Просто вывод, чтобы мы знали когда говорить
		# Устанавливаем паузу, чтобы прослушивание
		# началось лишь по прошествию 1/2 секунды
		r.pause_threshold = 0.5
		# используем adjust_for_ambient_noise для удаления посторонних шумов из аудио дорожки
		r.adjust_for_ambient_noise(source, duration=1)
		# Полученные данные записываем в переменную audio
		# пока мы получили лишь  звук
		audio = r.listen(source)

	try: # Обрабатываем все при помощи исключений
		""" 
		Распознаем данные из mp3 дорожки.
		Указываем что отслеживаемый язык русский.
		Благодаря lower() приводим все в нижний регистр.
		Теперь мы получили данные в формате строки,
		которые спокойно можем проверить в условиях
		"""
		zadanie = r.recognize_google(audio, language="ru-RU").lower()
		# Просто отображаем текст что сказал пользователь
		print("Вы сказали: " + zadanie)
	# Если не смогли распознать текст, то будет вызвана эта ошибка
	except sr.UnknownValueError:
		# Здесь просто проговариваем слова "Я вас не поняла"
		# и вызываем снова функцию command() для
		# получения текста от пользователя
		talk("Я вас не поняла")
		zadanie = command()

	# В конце функции возвращаем текст задания
	# или же повторный вызов функции
	return zadanie

# Данная функция служит для проверки текста,
# что сказал пользователь (zadanie - текст от пользователя)
def makeSomething(zadanie):
	# Попросту проверяем текст на соответствие
	# Если в тексте что сказал пользователь есть слова
	# "открыть сайт", то выполняем команду
	opSite = ('открыть сайт','открой сайт', 'запусти сайт')
	ostanovites= ('стоп', 'стой', 'осановитесь', 'выход')
	yourName = ('имя', 'твоё имя', 'как тебя зовут')
	timeNow =('текущее время', 'который час', 'текущий час', 'который сейчас час', 'сколько время')
	music =('включи музыку', 'проиграй музыку', 'музыка', 'радио', 'включи радио')
	if zadanie in opSite:
		talk("Уже открываю") # Проговариваем текст
		# Указываем сайт для открытия
		url = 'https://google.com'
		webbrowser.open(url) # Открываем сайт
	# если было сказано "стоп", то останавливаем прогу
	elif zadanie in ostanovites:
		# Проговариваем текст
		talk("Да, конечно, без проблем")
		# Выходим из программы
		sys.exit()
	# Аналогично
	elif zadanie in yourName:
		talk("Меня зовут Умник")
	elif zadanie in timeNow:
		now = datetime.datetime.now()
		talk("Сейчас " + str(now.hour) + ":" + str(now.minute))
	elif zadanie in music:
		# Указываем сайт для открытия
		url = 'https://radio.i.ua/play/hit.fm/'
		webbrowser.open(url)  # Открываем сайт
# ТЕЛО программы
# Вызов функции и передача строки
# именно эта строка будет проговорена компьютером
talk("Привет, чем я могу помочь вам?")

# Вызов функции для проверки текста будет
# осуществляться постоянно, поэтому здесь
# прописан бесконечный цикл while, выход произойдет лишь по слову "стоп"
while True:
	makeSomething(command())